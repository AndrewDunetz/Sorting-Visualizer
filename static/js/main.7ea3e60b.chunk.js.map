{"version":3,"sources":["components/mainpage.component.jsx","components/header.component.jsx","components/bar.component.jsx","components/bar-graph.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","array","changeArray","insertionSort","quickSort","mergeSort","className","onClick","this","length","React","Component","Bar","height","style","BarGraph","map","id","otherSectionProps","MainPage","HeightArray","ShuffledHeights","sort","Math","random","setState","a","i","key","temp","j","Promise","r","setTimeout","console","log","arr","low","high","partition","pi","merge","l","m","n1","n2","L","Array","R","k","parseInt","b","pivot","swap","ListOfHeights","push","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ea3e60b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport Header from './header.component';\r\nimport BarGraph from './bar-graph.component';\r\n\r\nclass MainPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: this.props.array\r\n        };\r\n    };\r\n\r\n    async swap(arr, a, b) {\r\n        await new Promise(r => setTimeout(r, 10));\r\n        var temp = arr[a];\r\n        arr[a] = arr[b];\r\n        this.setState({\r\n            array: arr\r\n        });\r\n        arr[b] = temp;\r\n        this.setState({\r\n            array: arr\r\n        });\r\n    };\r\n\r\n    async partition(arr, low, high) {\r\n        var pivot = arr[high].height;\r\n        console.log(pivot);\r\n        var i = (low - 1);\r\n\r\n        for (var j = low; j <= high - 1; j++) {\r\n            if (arr[j].height < pivot) {\r\n                i++;\r\n                await this.swap(arr, i, j);\r\n            }\r\n        }\r\n        await this.swap(arr, i + 1, high);\r\n        return (i + 1);\r\n    };\r\n\r\n    changeArray = () => {\r\n        const HeightArray = ShuffledHeights.sort(() => Math.random() -0.5);\r\n        this.setState({\r\n            array: HeightArray\r\n        });\r\n    };\r\n\r\n    insertionSort = async () => {\r\n        const HeightArray = ShuffledHeights;\r\n        for (var i = 1; i < HeightArray.length; i++) {\r\n            var key = HeightArray[i].height;\r\n            var temp = HeightArray[i];\r\n            var j = i - 1;\r\n\r\n            while (j >= 0 && HeightArray[j].height > key) {\r\n                HeightArray[j + 1] = HeightArray[j];\r\n                j = j - 1;\r\n            }\r\n            HeightArray[j + 1] = temp;\r\n            await new Promise(r => setTimeout(r, 25));\r\n            this.setState({\r\n                array: HeightArray\r\n            });\r\n        }\r\n        console.log(HeightArray);\r\n    };\r\n\r\n    quickSort = async (arr, low, high) => {\r\n        //console.log(HeightArray);\r\n        //await new Promise(r => setTimeout(r, 300));\r\n        this.setState({\r\n            array: arr\r\n        });\r\n        if (low < high) {\r\n            var pi = await this.partition(arr, low, high);\r\n            this.setState({\r\n                array: arr\r\n            });\r\n\r\n            this.quickSort(arr, low, pi - 1);\r\n            this.quickSort(arr, pi + 1, high);\r\n        }\r\n        console.log(arr);\r\n        //await new Promise(r => setTimeout(r, 300));\r\n        this.setState({\r\n            array: arr\r\n        });\r\n    };\r\n\r\n    merge = (arr, l, m, r) => {\r\n        var n1 = m - l + 1;\r\n        var n2 = r - m;\r\n\r\n        console.log(n1 + \" \" + n2);\r\n\r\n        var L = new Array(n1);\r\n        var R = new Array(n2);\r\n\r\n        for (var i = 0; i < n1; i++) {\r\n            L[i] = arr[l + i];\r\n        }\r\n        for (var j = 0; j < n2; j++) {\r\n            R[j] = arr[m + 1 + j];\r\n        }\r\n\r\n        var i = 0;\r\n        var j = 0;\r\n        var k = l;\r\n\r\n        while (i < n1 && j < n2) {\r\n            if (L[i].height <= R[j].height) {\r\n                arr[k] = L[i];\r\n                i++;\r\n            }\r\n            else {\r\n                arr[k] = R[j];\r\n                j++;\r\n            }\r\n            k++;\r\n        }\r\n\r\n        while (i < n1) {\r\n            arr[k] = L[i];\r\n            i++;\r\n            k++;\r\n        }\r\n\r\n        while (j < n2) {\r\n            arr[k] = R[j];\r\n            j++;\r\n            k++;\r\n        }\r\n    };\r\n\r\n    mergeSort = async (arr, l, r) => {\r\n        console.log(l + \" \" + r)\r\n        await new Promise(r => setTimeout(r, 10));\r\n        if (l >= r) {\r\n            return;\r\n        }\r\n        var m = l + parseInt((r - l) / 2);\r\n        await this.mergeSort(arr, l, m);\r\n        await this.mergeSort(arr, m + 1, r);\r\n        this.merge(arr, l, m, r);\r\n        this.setState({\r\n            array: arr\r\n        });\r\n        console.log(arr);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header \r\n                    array={ShuffledHeights} \r\n                    changeArray={this.changeArray} \r\n                    insertionSort={this.insertionSort}\r\n                    quickSort={this.quickSort}\r\n                    mergeSort={this.mergeSort}\r\n                />\r\n                <BarGraph array={ShuffledHeights} />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst ListOfHeights = [];\r\nfor (var i = 0; i < 100; i++) {\r\n    ListOfHeights.push({id: i, height: i * 2 + 100})\r\n}\r\n\r\nconst ShuffledHeights = ListOfHeights.sort(() => Math.random() -0.5);\r\n\r\nexport default MainPage;","import React from 'react';\r\nimport './header.styles.scss';\r\n\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: this.props.array,\r\n            changeArray: this.props.changeArray,\r\n            insertionSort: this.props.insertionSort,\r\n            quickSort: this.props.quickSort,\r\n            mergeSort: this.props.mergeSort\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='header'>\r\n                <button className='header-button' onClick={this.props.changeArray}>Generate Array</button>\r\n                <button className='header-button' onClick={this.props.insertionSort}>Insertion Sort</button>\r\n                {/* <button className='header-button'>Shell Sort</button> */}\r\n                <button className='header-button' onClick={() => this.props.mergeSort(this.props.array, 0, this.props.array.length - 1)}>Merge Sort</button>\r\n                {/* <button className='header-button'>Heap Sort</button> */}\r\n                <button className='header-button' onClick={() => this.props.quickSort(this.props.array, 0, this.props.array.length - 1)}>Quick Sort</button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './bar.styles.scss';\r\n\r\nclass Bar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            height: this.props.height\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='bar' style={{height: this.state.height}}>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Bar;","import React from 'react';\r\nimport './bar-graph.styles.scss';\r\n\r\nimport Bar from './bar.component';\r\n\r\nclass BarGraph extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: this.props.array\r\n            \r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='barGraph'>\r\n                {this.state.array.map(({ id, ...otherSectionProps}) => (\r\n                    <Bar key={id} {...otherSectionProps} />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BarGraph;","import './App.css';\n\nimport MainPage from './components/mainpage.component';\n\nfunction App() {\n  return (\n    <div>\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}